function        out             = mv2_av0FSL(i1,fbc);
%% generated by mv2_i2m on 07-Mar-2014 16:28:38
% source file: iv2_av0FSL
% 
if isnumeric(i1);               feval(['local_f',intstr(i1(1),3)],fbc);
else;                           out                         = feval(['local_',i1],fbc);             end;
return;
%
function        out             = local_opt(fbc);
%% listing option strings of this i-file:
% 
% 
out                             = [
'pmp'
'snu'];
return;
%% 
function        out             = local_fun(fbc);
%% returning step descriptions
% 
out{1}                          = 'define ACPC points (tmp.mri)';
out{2}                          = 'reformat tmp.mri to tmp.nii';
out{3}                          = 'check status of MRI/auto-VOIs methods';
out{4}                          = 'generate scripts to run FSL/Anat';
out{5}                          = 'transfer automated VOIs, if successful';
out{6}                          = 'review/approve VOI outlines (FSL)';
out{7}                          = 'spatially normalize MRI (SN)';
out{8}                          = 'view/approve std.BOL on post-SN MRI (SN)';
out{9}                          = 'view brainOLs on MRI';
out{10}                         = 'generate scripts to run FreeSurfer (FS)';
out{11}                         = 'transfer FS VOIs etc, if FS is successful';
out{12}                         = 'review/approve brain OLs on MRI (FS)';
return;
%% 
function        out             = local_fls(fbc);
%% List of input/output files:
% 
global g4iv2;
out                             = {
'mri/tmp.mri'
'ezr/tmp.acpc'
'mri/tmp.nii'
'mri\tmp.nii'
'ezr/mv2_startfsl.mat'
'mri/fsl.nii'
'mri/tmp_run_fslAnat.sh'
'mri/fslbc.nii'
'mri/fsl_bmsk.nii'
'mri/fsl_fslVOIs.nii'
'mri/fsl_fslVOIs.ezr'
'ezr/fsl_fslVOIs.ezr'
'mri/fsl_fslVOIs.xyz'
'mri/fsl_bmsk.xyz'
['ezr/',g4iv2.xxx(fbc(3)).pmp,'_FSL_vmo.mat']
['mri/fslbc.nii(snU',g4iv2.xxx(fbc(3)).snu,'.nii)']
'mri/fslbc.nii(gm.nii)'
'mri/fslbc.nii(wm.nii)'
'mri/fslbc.nii(csf.nii)'
'mri/fslbc.nii(bc.nii)'
'mri/fslbc.nii(snUs12_def.nii)'
'mri/fslbc.nii(s12t05.nii)'
'mri/fslbc.nii(s12t05.xyz)'
'mri/fslbc.nii(snUs12_inv.nii)'
['ezr/',g4iv2.xxx(fbc(3)).pmp,'_SN_vmo.mat']
'mri/fslbc.nii(fsVOIs.nii)'
'mri/fslbc.nii(run_freeSurfer.sh)'
'mri/fslbc.nii(#2fsbc1.nii)'
'mri/fslbc.nii(#2fsbc0.nii)'
'mri/fslbc.nii(fs81.ezr)'
'mri/fslbc.nii(fsbc1.nii)'
'mri/fslbc.nii(fsbc0.nii)'
'mri/fslbc.nii(BOLs.xyz)'
'ezr/(mri/fslbc.nii(fs81.ezr))'
'mri/fslbc.nii(fs45.ezr)'
'ezr/(mri/fslbc.nii(fs45.ezr))'
['ezr\',g4iv2.xxx(fbc(3)).pmp,'_FS81_vmo.mat']};
%
return;
%% 
function        out             = local_fns(fbc);
%% [in/out, file#@process, process#, file#@ifile, taskID#]
% 
out                             = [
1    1    1    1  105
2    1    1    2  105
2    2    1    3  105
1   1   2   1  97
1   2   2   2  97
2   1   2   3  97
1    1    3    4  105
2    1    3    5  105
1   1   4   3  97
1   2   4   5  97
2   1   4   6  97
1   1   5   7  97
1   2   5   5  97
2   1   5   6  97
2   2   5   8  97
2   3   5   9  97
2   4   5  10  97
2   5   5  11  97
2   6   5  12  97
2   7   5  13  97
2   8   5  14  97
1   1   6   6  99
1   2   6  13  99
1   3   6   5  99
2   1   6  15  99
1   1   7   8  97
1   2   7   5  97
2   1   7  16  97
2   2   7  17  97
2   3   7  18  97
2   4   7  19  97
2   5   7  20  97
2   6   7  21  97
2   7   7  22  97
2   8   7  23  97
2   9   7  24  97
1   1   8  16  99
1   2   8   5  99
2   1   8  25  99
1    1    9    8  111
1    2    9   23  111
1   1  10   8  97
1   2  10   5  97
2   1  10  26  97
1   1  11   8  97
1   2  11  27  97
1   3  11   5  97
2   1  11  26  97
2   2  11  28  97
2   3  11  29  97
2   4  11  30  97
2   5  11  31  97
2   6  11  32  97
2   7  11  33  97
2   8  11  34  97
2   9  11  35  97
2  10  11  36  97
1   1  12  31  99
1   2  12  33  99
1   3  12   5  99
2   1  12  37  99];
return;
%% 
function                        local_f001(fbc);
%% command lines for step 1
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
vL2Land(iii{1},                 'fun','acpc',               'vfl',ooo{1});                                                       
if exist(ooo{2},'file');                                                                                                         
    h                           = findobj(g0f,'String',     'Save');                                                             
    postQ({'mri/tmp.nii exists','You are not allowed to save ACPC points',' '},[]);                                              
    set(h,'Enable',             'off');                                                                 end;                     
return
%% 
function                        local_f002(fbc);
%% command lines for step 2
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
ezi2spm(iii{1},                 'acp',iii{2},               'ofl',ooo{1});                                                       
return
%% 
function                        local_f003(fbc);
%% command lines for step 3
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if ~exist(ooo{1},'file');       mv2_startfsl('ig',ooo{1},fbc,[],[]);                                end;                         
if exist(ooo{1},'file');        mv2_startfsl('disp',ooo{1},fbc,[],[]);                              end;                         
return
%% 
function                        local_f004(fbc);
%% command lines for step 4
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
run_fsl_anat('gen',g4iv2.yyy.ifl,                   iii{1});                                                             
return
%% 
function                        local_f005(fbc);
%% command lines for step 5
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if exist(ooo{3},'file') && ~exist(ooo{8},'file');                                                                                
                                run_fsl_anat('ret',         ooo{3},[]);                             end;                         
if exist(ooo{4},'file') && ~exist(ooo{5},'file');                                                                                
                                run_fsl_anat('voi',         ooo{4},ooo{5});                         end;                         
if exist(ooo{5},'file') && ~exist(ooo{6},'file');                                                                                
                                copyfile(ooo{5},            ooo{6});                                end;                         
if exist(ooo{5},'file') && ~exist(ooo{7},'file');                                                                                
                                ezr2xyz(ooo{5},ooo{7});                                             end;                         
if exist(ooo{5},'file');        mv2_startfsl(iii{2},        'fsl_fsl','p');                                                      
else;                           mv2_startfsl(iii{2},        'fsl_fsl','f');                         end;                         
return
%% 
function                        local_f006(fbc);
%% command lines for step 6
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
vL2Land(iii{1}, 'fun','cOLs',   'xyz',iii{2},               'fbc',fbc);                                                          
mv2_startfsl('set',g0f,         'fsl_fsl',                  iii{3}, ooo{1});                                                     
return
%% 
function                        local_f007(fbc);
%% command lines for step 7
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if 'a'=='a' && ~mv2_startfsl('ck',iii{2},'fsl_spm',[],[]);                                  return;         end;                 
if exist(ooo{9},'file');                                                            return;         end;                         
tpm                             = s12_stdtpms(g4iv2.xxx(fbc(3)).snu);                                                    
if isempty(tpm);                disp(['Wrong input snu ... ',g4iv2.xxx(fbc(3)).snu]);                return;         end;
[idx, inm, iex]                 = fileparts(iii{1});                                                                             
if ~strcmpi(iex,'.nii');                                                            return;         end;                         
for i=1:1:3;                    seg{i}                      = ooo{i+1};                             end;                         
s12_snU(iii{1},'ew',ooo{1},     'seg',seg,  'bcm',ooo{5},   'def',ooo{6},'inv',ooo{9},  'f4w',tpm.f4w);                          
if ~exist(ooo{1},'file');       disp('??? Contact hkuwaba1@jhmi.edu');              return;         end;                         
s12_genGWmsk(char(ooo{2:3}),    ooo{7},         'rtx',0.5,  'flt',[3,3,3]);                                                      
if exist(ooo{7},'file');        msk2xyz(ooo{7}, 'thx',0.5,  'ofl',ooo{8});                          end;                         
return
%% 
function                        local_f008(fbc);
%% command lines for step 8
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
tpm                             = s12_stdtpms(g4iv2.xxx(fbc(3)).snu);                                                    
if isempty(tpm);                disp(['Wrong input snu ... ',g4iv2.xxx(fbc(3)).snu]);                return;         end;
vL2Land(iii{1},                 'fun','cOLs',               'xyz',tpm.xyz,          'fbc',fbc);                                  
mv2_startfsl('set',g0f,                 'fsl_spm',iii{2},ooo{1});                                                                
return
%% 
function                        local_f009(fbc);
%% command lines for step 9
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
vL2Land(iii{1},                 'fun','cOLs',               'xyz',iii{2});                                                       
return
%% 
function                        local_f010(fbc);
%% command lines for step 10
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if ~mv2_startfsl('ck',iii{2},'fsl_fs',[],[]);                                         return;         end;                       
use_freeSurfer(iii{1},[],       g4iv2.yyy.usr,{'_fsVOIs.nii','2fsbc0.nii','2fsbc1.nii'});                                
return
%% 
function                        local_f011(fbc);
%% command lines for step 11
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if exist(ooo{1},'file') && exist(ooo{2},'file') && exist(ooo{3},'file');                                                         
    if ~exist(ooo{4},'file');   fs_cropMRIs(ooo(1:3),ooo(4:7),  iii{1});                    end;    end;                         
if ~exist(ooo{4},'file');       mv2_startfsl(iii{3},'fsl_fs',     'f');                   return;         end;                   
if ~exist(ooo{8},'file');       copyfile(ooo{4},            ooo{8});                                end;                         
if ~exist(ooo{9},'file');       fs_f81Tf45(ooo{4},          ooo{9});                                end;                         
if ~exist(ooo{10},'file');      copyfile(ooo{9},            ooo{10});                               end;                         
return
%% 
function                        local_f012(fbc);
%% command lines for step 12
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
vL2Land(iii{1},                 'fun','cOLs',               'xyz',iii{2},       'fbc',fbc);                                      
mv2_startfsl('set',g0f,         'fsl_fs',                     iii{3},ooo{1});                                                    
return
%% 
