function    out                 = mv2_vnosets(i1,i2); 

% To compare new VOI set (=input) to the saved one, and revise it if needed.
%       
%       usage:  out             = mv2_vnosets(input1,input2)
%
%   input1  -   a matrix (n by 2) of VOIID#s (c1) and VOI status given by
%               1/2 for completed (=2; 'complete' or 'as good as possible')
%               or not
%   input2  -   the local directory system file dxsetc4???.m
%       
% Spetial usages:
%   To return VOIIDNos of a VOI set (used for TAC generaton)
%       input1  =   last digits of the VOI flag (e.g., 41 of FSL_FS81_v41)
%       input2  =   the local directory system file dxsetc4???.m
%       out     =   [VOIIDNos, completion flags] (n by 2)
%                   1=as generated by FSL/FS; 2=edited or reference region 
%
% (cL)2013    hkuwaba1@jhmi.edu 

% Notes 
%   v.vnos and v.vcst alone are used / updated
%   others (such as v.vset etc) in older versions are ignored.
%
margin                          = 2;
if nargin<margin;               help(mfilename);                                    return;         end;
out                             = [];
% vfl = local voi set file:
global g4iv2;
if isempty(g4iv2);              
    disp(['.problem! ',mfilename,' workes under IDAE alone.']);                     return;         end;
vfl                             = feval(i2,     'vst',g4iv2.yyy.usr);
if isempty(vfl);                                                                    return;         end;
if ~isstruct(i1);               out                         = local_u1(i1,  vfl);   return;         end;
%
vnos                            = i1.vnos(:,    1);
vcst                            = zeros(size(vnos));
for i=1:1:size(i1.vnos,2)-1;    vcst(i1.vnos(:,i+1)>0, :)   = i1.vnos(i1.vnos(:,i+1)>0, i+1);       end;
% reference regoins (vcst=9) is the same as 'to edit' VOIs with respect to completion status 
vcst(vcst>2)                    = 2;
% generating the VOI flag (part of TAC files)
vvv                             = [];
for i=max(i1.vvv):-1:2;         vvv                         = [i1.regVRs{i1.vvv==i},'_'];           end;
% when vfl is not present > create one:
if ~exist(vfl,'file');
    if ~exist(fileparts(vfl),'dir');                        makedir(fileparts(vfl),'sil','on');     end;
    out                         = [vvv,                     'v1'];
    v.vnos                      = zeros(size(vnos));
    [v.vnos(:,1), is]           = sort(vnos);
    v.vcst                      = vcst;
    disp('.created! (VOI registration file for TAC generation)');
    disp([' output .. ',vfl]);
    save(vfl,                   'v');                                                               end;
%
load(vfl);
if ~exist('v','var');           
    disp(['.wrong input .. ',vfl,10,'..aborting .. ',mfilename]);                   return;         end;
%
q                               = zeros(max([max(v.vnos), max(vnos)]),  1);
q(vnos,     :)                  = 1;
q(v.vnos,   :)                  = 1;
q2                              = find(q>0);
clear q;
v0                              = consolidVOINos(v.vnos,    q2);
v1                              = consolidVOINos(vnos,      q2);
%
c0                              = zeros(size(v0,1),         size(v.vcst,2));
c0(v0(:,2)>0,   :)              = v.vcst(v0(v0(:,2)>0,2),   :);
c0(c0>2)                        = 2;
%
c1                              = zeros(size(v0,1),         1);
c1(v1(:,2)>0,   :)              = vcst(v1(v1(:,2)>0,2),     :);
%
p                               = sum(abs(c0 - c1(:, ones(size(c0,2),1))),  1);
if any(~p); 
    out                         = [vvv,     'v',int2str(find(p==0,1))];
else;
    clear v;
    v                           = struct('vnos',v0(:,1),    'vcst',[c0,c1]);
    disp('.revised! (VOI registration file for TAC generation)');
    disp([' output .. ',vfl]);
    save(vfl,   'v');
    out                         = [vvv,     'v',int2str(size(c0,2)+1)];                             end;
return;
%%

function    out                 = local_u1(i1, vfl);
%%
load(vfl);
out                             = [v.vnos(v.vcst(:,i1(1))>0,:),  v.vcst(v.vcst(:,i1(1))>0,   i1(1))];
return;
%%
