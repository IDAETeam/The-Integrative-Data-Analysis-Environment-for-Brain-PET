function        out             = mv2_hmcMIT(i1,fbc);
%% generated by mv2_i2m on 20-Oct-2021 16:25:26
% source file: iv2_hmcMIT
% 
if isnumeric(i1);               feval(['local_f',intstr(i1(1),3)],fbc);
else;                           out                         = feval(['local_',i1],fbc);             end;
return;
%
function        out             = local_opt(fbc);
%% listing option strings of this i-file:
% 
% 
out                             = [
'pio'
'avr'];
return;
%% 
function        out             = local_fun(fbc);
%% returning step descriptions
% 
out{1}                          = 'perform head mortion correction (ver.spmMIT)';
out{2}                          = 'review / approve PET-MRI coregistration, if segmented scans';
out{3}                          = 'list progress statuses of segmented scans across subjects, if any';
out{4}                          = 'review HMC coregistration parameters';
out{5}                          = 'view HMC-PET';
out{6}                          = 'view original and hmc PET';
out{7}                          = 'review/approve/interpolate whole brain TAC (QC)';
return;
%% 
function        out             = local_fls(fbc);
%% List of input/output files:
% 
global g4iv2;
out                             = {
['pet/',g4iv2.xxx(fbc(3)).pio,'.ezm']
'pet/tra_rsz_qc_log.mat'
['pet/',g4iv2.xxx(fbc(3)).pio,'_hmcMIT.ezm']
['pet/',g4iv2.xxx(fbc(3)).pio,'_hmcMIT_',g4iv2.xxx(fbc(3)).avr,'.ezi']
['pet/',g4iv2.xxx(fbc(3)).pio,'_hmcMIT_means.eza']
'pet/tra_rsz_info.mat'
'pet/tra_rsz_sum_hmc_p2m_ok.txt'
['pet/',g4iv2.xxx(fbc(3)).pio,'_',g4iv2.xxx(fbc(3)).avr,'.ezi']
['pet/',g4iv2.xxx(fbc(3)).pio,'_hmcMIT_means_ok.txt']};
%
return;
%% 
function        out             = local_fns(fbc);
%% [in/out, file#@process, process#, file#@ifile, taskID#]
% 
out                             = [
1   1   1   1  97
1   2   1   2  97
2   1   1   3  97
2   2   1   4  97
2   3   1   5  97
1    1    2    1  100
1    2    2    2  100
1    3    2    6  100
2    1    2    7  100
1    1    3    2  111
1    1    4    3  111
1    1    5    4  111
1    1    6    8  111
1    2    6    4  111
1   1   7   5  99
1   2   7   3  99
2   1   7   9  99
2   2   7   2  99];
return;
%% 
function                        local_f001(fbc);
%% command lines for step 1
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if min(mv2_get_dnum(ooo))>max(mv2_get_dnum(iii));                                                       
    disp(['.HMC - previously done (Subject: ',deblank(g4iv2.yyy.snm(fbc(2),:)),     ...                 
        '; PET #',int2str(fbc(3)),'/',int2str(size(g4iv2.yyy.cMat,1)),')']);      	return;              
else;                                                                                                   
    disp(['.performing HMC (Subject: ',deblank(g4iv2.yyy.snm(fbc(2),:)),            ...                 
        '; PET #',int2str(fbc(3)),'/',int2str(size(g4iv2.yyy.cMat,1)),')']);                        end;
f4e                             = struct('fwhm',[7,7],  'cost_fun','ecc');                              
hh                              = [122.2./60,   20.364,     109.77];                                    
imt                             = umo_cstrs(['[15O]';'[11C]';'[18F]'], g4iv2.yyy.tnm(fbc(3), :), 'im1');
if imt<1;                       disp('.unkown isotope! consult hkuwaba1@jhmi.edu'); return;         end;
[iii{3}, g3]                  	= mv2_genfln(fullfile('pet','tra_rsz_info.mat'), fbc(1,1:3));            
if g3>0;                                                                                                
    disp('.info: a segmented / interrupted scan case');                                                 
    disp([' using: ',iii{3}]);                                                                          
    i1.name                     = iii;                                                                  
    i1.hlm                      = hh(imt);                                                              
    i1.fbc                      = fbc;                                                                  
    s12_hmcMIT(i1, ooo, 'f4e',f4e);                                                 return;         end;
if mv2_get_dnum(iii(1))>mv2_get_dnum(ooo(1));                                                           
  	s12_hmcMIT(struct('name',iii{1}, 'hlm',hh(imt), 'fbc',fbc(1, 1:3)), ooo{1}, 'f4e',f4e);         end; 
dno                             = mv2_get_dnum(ooo);                                                    
if dno(1)>dno(3);               getmAT(ooo{1},[],   'ofl',ooo{3});                                  end;
if dno(1)>dno(2);               sumFrames(ooo{1},   g4iv2.xxx(1).avr);                              end;
return
%% 
function                        local_f002(fbc);
%% command lines for step 2
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
s0                              = 'review / approve PET-MRI coregistration, ifsegmented scans';         
s                               = load(iii{3});                                                         
if numel(s.sss)<3;                                                                                      
    h                           = findobj(gcf, 'String',s0);    ...                                     
    set(h, 'String',['Not ready for PET #',int2str(fbc(3))], 'BackgroundColor',iv2_bgcs(11));           
    pause(0.5);                                                                                         
    set(h, 'String',s0, 'BackgroundColor',iv2_bgcs(0));                             return;         end;
i1.name                         = iii;                                                                  
i1.fbc                          = fbc;                                                                  
s12_hmcMIT(i1, ooo);                                                                                    
return
%% 
function                        local_f003(fbc);
%% command lines for step 3
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
g1                              = zeros(size(g4iv2.yyy.snm,1), 1);                                      
g2                              = zeros(size(g4iv2.yyy.snm,1), 1);                                      
g3                              = zeros(size(g4iv2.yyy.snm,1), 1);                                      
g4                              = zeros(size(g4iv2.yyy.snm,1), 1);                                      
disp('.listing progress statuses of segmented / interrupted scans');                                    
for i=1:1:size(g4iv2.yyy.cMat,1);                                                                       
    [f1, g1(:)]               	= makefarrays('pet','tra_rsz_qc_log.mat',   'fbc',[1,0,i]);              
    [f2, g2(:)]                 = makefarrays('pet','tra_rsz_info.mat',     'fbc',[1,0,i]);             
    [f4, g4(:)]                 = makefarrays('pet',[g4iv2.xxx(i).pio,'_hmcMIT_means_ok.txt'],  ...     
                                                            'fbc',[1,0,i]);                             
    for j=find(g2>0)';                                                                                  
        s                       = load(deblank(f2(j, :)));                                              
        if isfield(s.sss{1},'sme');                                                                     
                                g2(j, :)                    = max(s.sss{1}.sme(:,4));                   
        else;                   g2(j, :)                    = max(s.sss{1}.tim(:,3));               end;
        g3(j, :)                = numel(s.sss);                                                     end;
    k                           = find(g2+g3+g4>0);                                                     
   	disp(['> PET #',int2str(i),'/',int2str(size(g4iv2.yyy.cMat,1))]);                                   
    if ~isempty(k);                                                                                     
        disp(' Columns: A=noHMC checked; B: # of segments;')                                            
        disp('          C: HMC not done yet (=1), in progress (=2); D: Approved');                      
        dispCharArrays(1, char('Subjects',g4iv2.yyy.snm(k, :)),2, char('A',int2str(g1(k))),2,   ...     
            char('B',int2str(g2(k))),2, char('C',int2str(g3(k))), 2,char('D',int2str(g4(k))));          
    else;                                                                                               
        disp(' currently no segmented / interrupted scans identified');                     end;    end;
return
%% 
function                        local_f004(fbc);
%% command lines for step 4
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
[ps, tim]                      	= gei(iii{1},   'spmparams','PETtimes');                                
[info_mat, g2]               	= mv2_genfln(fullfile('pet','tra_rsz_info.mat'), fbc(1,1:3));             
if g2>0;                                                                                                
    s                           = load(info_mat);                                                       
    ps1                         = ps;                                                                   
    tim                         = s.sss{3}.sme(:, 2:3);                                                 
    ps                          = nan(size(tim,1),    6);                                               
    ps(s.sss{3}.sme(:,4)==1, :) = ps1( s.sss{3}.sme( s.sss{3}.sme(:,4)==1, 5), :);                      
    for i=2:1:numel(s.sss{3}.ezm_hmc);                                                                  
        px                      = gei(s.sss{3}.ezm_hmc{i},  'spmparams');                               
        ps(s.sss{3}.sme(:,4)==i, :)     ...                                                             
                                = px(s.sss{3}.sme( s.sss{3}.sme(:,4)==i, 5), :);            end;    end;
ppp                             = {{'L-R','A-P','C-N'}, {'X','Y','Z'}};                                 
yyy                             = {'Linear (mm)','Rotational (radian)'};                                
snm                             = deblank(g4iv2.yyy.snm(fbc(2), :));                                    
snm(snm=='_')                   = ' ';                                                                  
add                             = [0, 3];                                                               
for i=1:1:2;                                                                                            
    figure;                                                                                             
    p1                          = plot(tim(:,1), ps(:, add(i)+[1:3]), '.-');                            
    set(gca,    'Fontsize',13);                                                                         
    set(findobj(gca, 'Marker','.'), 'MarkerSize',12);                                                   
    hold on;                                                                                            
    plot(get(gca, 'XLim'), [0,0], 'k:')                                                                 
    legend([p1(1),p1(2),p1(3)], ppp{i});                                                                
    xlabel('Time (min)');                                                                               
    ylabel(yyy{i});                                                                                     
    title(['Subject: ',snm,'; PET #',int2str(fbc(3))]);                                             end;
return
%% 
function                        local_f005(fbc);
%% command lines for step 5
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
isz                             = gei(iii{1},           'imagesize');                                   
if isz(3)>35;                   vL2Land(iii{1},         'fun','disp');                                  
else;                           viewImages(iii{1});                                                 end;
return
%% 
function                        local_f006(fbc);
%% command lines for step 6
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
dispimvsrbr(iii);                                                                                       
return
%% 
function                        local_f007(fbc);
%% command lines for step 7
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                      = 'hmcMIT';                                                             
ooo{3}                          = mv2_genfln(fullfile('pet','tra_rsz_info.mat'),    fbc(1,1:3));        
mv2_w4MPcoreg('review_ctac',iii,ooo,fbc(1,1:3));                                                        
return
%% 
