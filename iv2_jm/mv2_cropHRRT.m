function        out             = mv2_cropHRRT(i1,fbc);
%% generated by mv2_i2m on 20-Sep-2022 19:19:30
% source file: iv2_cropHRRT
% 
if isnumeric(i1);               feval(['local_f',intstr(i1(1),3)],fbc);
else;                           out                         = feval(['local_',i1],fbc);             end;
return;
%
function        out             = local_opt(fbc);
%% listing option strings of this i-file:
% 
% 
out                             = [
'pio'
'ifc'
'avr'];
return;
%% 
function        out             = local_fun(fbc);
%% returning step descriptions
% 
out{1}                          = 'coregister MRI to PET for PET cropping';
out{2}                          = 'review averaged PET with cropping box';
out{3}                          = 'review/approve cortex mean TAC (QC for scan problems)';
out{4}                          = 'perform correction requests, if any';
out{5}                          = 'display approval status across subjects & scans';
return;
%% 
function        out             = local_fls(fbc);
%% List of input/output files:
% 
global g4iv2;
out                             = {
['pet/',g4iv2.xxx(fbc(3)).pio,'_sum.ezi']
['pet/',g4iv2.xxx(fbc(3)).pio,'.ezm']
['pet/',g4iv2.xxx(fbc(3)).pio,'_sum_M2P4cropPET.xyz']
['pet/',g4iv2.xxx(fbc(3)).ifc,'.ezm']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_',g4iv2.xxx(fbc(3)).avr,'.ezi']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_means.eza']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_means_ok.txt']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_qc_log.mat']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_info.mat']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_info_done.txt']};
%
return;
%% 
function        out             = local_fns(fbc);
%% [in/out, file#@process, process#, file#@ifile, taskID#]
% 
out                             = [
1    1    1    1  115
1    2    1    2  115
2    1    1    3  115
2    2    1    4  115
2    3    1    5  115
2    4    1    6  115
1    1    2    1  111
1    2    2    5  111
1   1   3   6  99
1   2   3   4  99
1   3   3   3  99
1   4   3   2  99
2   1   3   7  99
2   2   3   8  99
1    1    4    8  115
1    2    4    9  115
1    3    4    5  115
2    1    4   10  115
1    1    5    1  111];
return;
%% 
function                        local_f001(fbc);
%% command lines for step 1
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
mv2_w4MPcoreg('crop_pet',iii,ooo,fbc(1, 1:3));                                                           
return
%% 
function                        local_f002(fbc);
%% command lines for step 2
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
[cxyz, dxyz]                    = gei(iii{2},   'chopped_at','cropped_at');                              
if isempty(cxyz) && isempty(dxyz);                                                                       
                                disp('> no cropping info recorded (aborting)');   	return;         end;  
if isempty(cxyz);               cxyz                        = dxyz;                                 end; 
if size(cxyz,1)>2;              cxyz                        = cxyz';                                end; 
vL2Land(iii{1},     'fun','mvBox',  'vfl',iii{2},   'box',cxyz',    'mnt',whichMonitor([]));             
set(findobj(gcf, 'String','Crop image'),  'Enable','off');                                               
set(findobj(gcf, 'Tag','vL2InfoB'), 'String',{' ','  Showing original PET with the cropping box',   ...  
    '  (observation alone)','  The box indicates boundaries of the cropped PET'});                       
return
%% 
function                        local_f003(fbc);
%% command lines for step 3
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                      = 'noHMC';                                                               
ooo{3}                          = mv2_genfln(fullfile('pet',[g4iv2.xxx(1).ifc,'_info.mat']), fbc(1,1:3));
mv2_w4MPcoreg('review_ctac',iii,ooo,fbc(1,1:3));                                                         
return
%% 
function                        local_f004(fbc);
%% command lines for step 4
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                      = 'noHMC';                                                               
mv2_w4MPcoreg('align_segs_nohmc',iii,ooo,fbc(1,1:3));                                                    
return
%% 
function                        local_f005(fbc);
%% command lines for step 5
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
mv2_w4MPcoreg('approval_status_ctac',iii,ooo,fbc(1,1:3));                                                
return
%% 
