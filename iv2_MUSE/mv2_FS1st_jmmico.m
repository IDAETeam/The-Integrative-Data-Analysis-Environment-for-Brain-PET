function        out             = mv2_FS1st_jmmico(i1,fbc);
%% generated by mv2_i2m on 09-Aug-2022 09:35:06
% source file: C:\mxxs12\ifiles\mri\iv2_FS1st_jmmico.m
% 
if isnumeric(i1);               feval(['local_f',intstr(i1(1),3)],fbc);
else;                           out                         = feval(['local_',i1],fbc);             end;
return;
%
function        out             = local_opt(fbc);
%% listing option strings of this i-file:
% 
% 
out                             = [
'pmp'];
return;
%% 
function        out             = local_fun(fbc);
%% returning step descriptions
% 
out{1}                          = 'generate bias-corrected MRI (ver.jmmico)';
out{2}                          = 'view bias map from mico';
out{3}                          = 'review original MRI, if avaiable';
out{4}                          = 'generate scripts to run Freesurfer (FS)';
out{5}                          = 'reformat FS-derived MRI (.mgz > .nii)';
out{6}                          = 'define ACPC points on FS-derived MRI';
out{7}                          = 'crop FS outputs around the brain';
out{8}                          = 'plot left vs. right VOI volumes';
out{9}                          = 'review/approve gray matter segmentation of FS';
out{10}                         = 'scatter plots of FS-derived VOI volumes';
return;
%% 
function        out             = local_fls(fbc);
%% List of input/output files:
% 
global g4iv2;
out                             = {
'mri/tmp.mri'
'mri/jmmico_bc.nii'
'mri/jmmico_biasmap.nii'
'mri\tmp.mri'
'mri\jmmico_fs_submitted.txt'
'mri\jmmico_tmp_aparc_aseg.nii'
'mri\jmmico_mgz_done.txt'
'mri\jmmico_mgz_bc0.nii'
'mri\jmmico_mgz_bc0_osz.nii'
'ezr\jmmico_mgz_bc0_osz.acpc'
'mri\jmmico_mgz_bc1.nii'
'mri\jmmico_fsbc_fs81.nii'
'mri\jmmico_fsbc.nii'
'mri\jmmico_fssz.nii'
'mri\jmmico_fsbc_BOLs.xyz'
'mri\jmmico_fsbc_fs81.ezr'
'mri\jmmico_fsbc_fs45.ezr'
['ezr\jmmico_',g4iv2.xxx(fbc(3)).pmp,'_m2m.mat']
'ezr\jmmico_fsbc_BOLs_ok.txt'
'mri\fsbc_fs81.ezr'};
%
return;
%% 
function        out             = local_fns(fbc);
%% [in/out, file#@process, process#, file#@ifile, taskID#]
% 
out                             = [
1   1   1   1  97
2   1   1   2  97
2   2   1   3  97
1    1    2    3  111
1    1    3    4  111
1    1    4    4  105
2    1    4    5  105
2    2    4    6  105
1   1   5   7  97
1   2   5   8  97
2   1   5   9  97
1    1    6    9  105
2    1    6   10  105
1   1   7   6  97
1   2   7  11  97
1   3   7   8  97
1   4   7  10  97
2   1   7  12  97
2   2   7  13  97
2   3   7  14  97
2   4   7  15  97
2   5   7  16  97
2   6   7  17  97
2   7   7  18  97
1    1    8   16  111
1   1   9  13  99
1   2   9  15  99
1   3   9  18  99
2   1   9  19  99
1    1   10   20  111
1    2   10   16  111];
return;
%% 
function                        local_f001(fbc);
%% command lines for step 1
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if isempty(dir(fullfile(fileparts(iii{1}),'dcm', [char(42),'.dcm'])));                                      
    disp(['.problem! .dcm not found .. ',10,' in: ',fullfile(fileparts(iii{1}),'dcm')]);                    
                                                                                    return;         end;    
if numel(dir(fullfile(fileparts(iii{1}),'dcm_jmmico',[char(42),'.dcm']))) <         ...                     
 	numel(dir(fullfile(fileparts(iii{1}),'dcm', [char(42),'.dcm'])));                                         
    MICO(fullfile(fileparts(iii{1}),'dcm'), fullfile(fileparts(iii{1}),'dcm_jmmico'),   ...                 
                                fullfile(fileparts(iii{1}),'dcm_biasmap'));                         end;    
bias_dcm                        = dir(fullfile(fileparts(iii{1}),'dcm_biasmap',[char(42),'.dcm_biasmap'])); 
if ~exist(ooo{2},'file');                                                                                   
    if numel(bias_dcm)==numel(dir(fullfile(fileparts(iii{1}),'dcm_jmmico',[char(42),'.dcm'])));             
                                dcm2umo4mri(bias_dcm, ooo{2});                                      end;    
else;                           disp('>previously generated (bias-map)');                           end;    
return
%% 
function                        local_f002(fbc);
%% command lines for step 2
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
vL2Land(iii{1}, 'fun','disp');                                                                              
return
%% 
function                        local_f003(fbc);
%% command lines for step 3
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
[idx, inm]                      = fileparts(iii{1});                                                        
if exist(fullfile(idx, [inm,'.nii']),'file');                                                               
    vL2Land(fullfile(idx, [inm,'.nii']), 'fun','disp');                                                     
else;                                                                                                       
    disp('.problem! original MRI in .nii format - not ready');                                      end;    
return
%% 
function                        local_f004(fbc);
%% command lines for step 4
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{2}                          = 'dcm_jmmico';                                                             
iii{2}                          = fbc(1, 1:3);                                                              
mv2_run_FS('single_script',iii,ooo);                                                                        
return
%% 
function                        local_f005(fbc);
%% command lines for step 5
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if fbc(3)>1;                                                                       	return;         end;    
fs_cropMRIs(iii(2),'MRI',ooo,'mgz2nii');                                                                    
return
%% 
function                        local_f006(fbc);
%% command lines for step 6
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
v0                              = spm_vol(iii{1});                                                          
h                               = findobj(findobj(groot,'Tag','iv2L2W'), 'Tag','L2W_gUseR0');               
str                             = get(h,    'String');                                                      
bgc                             = get(h,    'BackgroundColor');                                             
set(h,  'String','Starting VOILand. Be patient ..', 'BackgroundColor',iv2_bgcs(11));                        
drawnow;                                                                                                    
vL2Land(iii{1}, 'fun','acpc',   'vfl',ooo{1},   'mnt',whichMonitor([]));                                    
set(h,  'String',str,   'BackgroundColor',bgc);                                                             
vL2_BJs('Zoom',1);                                                                                          
vL2_BJs('Zoom',1);                                                                                          
drawnow;                                                                                                    
global g4vL2;                                                                                               
g4vL2{double(gcf)}.exit_do      = ['figure(findobj(groot,''Tag'',''iv2L2W'')); ', ...                       
    	'set(gcf, ''CurrentObject'',findobj(gcf, ''String'',''Update'')); mv2_a2([]);'];                       
return
%% 
function                        local_f007(fbc);
%% command lines for step 7
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
if fbc(3)>1;                                                                            return;         end;
use_freeSurfer(831,iii,ooo);                                                                                
if exist(ooo{2},'file');        mv2_w4MMcoreg('run',fbc(1, 1:3),ooo(2),ooo(7));                         end;
return
%% 
function                        local_f008(fbc);
%% command lines for step 8
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
mv2_run_FS('plot_lr_voi_volumes',iii,fbc(1, 1:3));                                                          
return
%% 
function                        local_f009(fbc);
%% command lines for step 9
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                     	= 'FS';                                                                     
mv2_w4MMcoreg('ols',fbc,        iii,ooo);                                                                   
return
%% 
function                        local_f010(fbc);
%% command lines for step 10
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
dx                              = gei(iii{1},   'dataInfo');                                                
vx                              = consolidVOINos(dx(:,2), dx(dx(:,4)<50,2));                                
dy                              = gei(iii{2},   'dataInfo');                                                
vy                              = consolidVOINos(dx(:,2), vx(:,1));                                         
plotXY(dx(vx(vy(:,2)>0,2), 4), dy(vy(vy(:,2)>0,2), 4));                                                     
title(['Subject: ',deblank(g4iv2.yyy.snm(fbc(3),:))]);                                                      
xlabel('VOI volumes [original] (mL)');                                                                      
ylabel('VOI volumes [jmmico]');                                                                             
return
%% 
