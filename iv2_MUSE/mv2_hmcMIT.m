function        out             = mv2_hmcMIT(i1,fbc);
%% generated by mv2_i2m on 03-Jun-2022 12:41:58
% source file: iv2_hmcMIT
% 
if isnumeric(i1);               feval(['local_f',intstr(i1(1),3)],fbc);
else;                           out                         = feval(['local_',i1],fbc);             end;
return;
%
function        out             = local_opt(fbc);
%% listing option strings of this i-file:
% 
% 
out                             = [
'pio'
'ifc'
'avr'];
return;
%% 
function        out             = local_fun(fbc);
%% returning step descriptions
% 
out{1}                          = 'perform head mortion correction (ver.spmMIT)';
out{2}                          = 'review/approve/interpolate whole brain TAC (QC)';
out{3}                          = 'review / approve PET-MRI coregistration, if segmented scans';
out{4}                          = 'list progress statuses of segmented scans across subjects, if any';
out{5}                          = 'review HMC coregistration parameters';
out{6}                          = 'view HMC-PET';
out{7}                          = 'view original and hmc PET';
return;
%% 
function        out             = local_fls(fbc);
%% List of input/output files:
% 
global g4iv2;
out                             = {
['pet/',g4iv2.xxx(fbc(3)).pio,'.ezm']
['pet/',g4iv2.xxx(fbc(3)).pio,'_qc_log.mat']
'pet/tra_sum_M2P4cropPET.xyz'
['pet/',g4iv2.xxx(fbc(3)).ifc,'.ezm']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_',g4iv2.xxx(fbc(3)).avr,'.ezi']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_means.eza']
['pet/',g4iv2.xxx(fbc(3)).pio,'_means.eza']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_means_ok.txt']
['pet/',g4iv2.xxx(fbc(3)).ifc,'_qc_log.mat']
['pet/',g4iv2.xxx(fbc(3)).pio,'_info.mat']
['pet/',g4iv2.xxx(fbc(3)).pio,'_sum_hmc_p2m_ok.txt']
['pet/',g4iv2.xxx(fbc(3)).pio,'_',g4iv2.xxx(fbc(3)).avr,'.ezi']};
%
return;
%% 
function        out             = local_fns(fbc);
%% [in/out, file#@process, process#, file#@ifile, taskID#]
% 
out                             = [
1   1   1   1  97
1   2   1   2  97
1   3   1   3  97
2   1   1   4  97
2   2   1   5  97
2   3   1   6  97
1   1   2   6  99
1   2   2   4  99
1   3   2   7  99
2   1   2   8  99
2   2   2   9  99
1    1    3    1  100
1    2    3    2  100
1    3    3   10  100
2    1    3   11  100
1    1    4    2  111
1    1    5    4  111
1    1    6    5  111
1    1    7   12  111
1    2    7    5  111];
return;
%% 
function                        local_f001(fbc);
%% command lines for step 1
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                      = mv2_genfln(fullfile('pet','tra_rsz_info.mat'),    fbc(1, 1:3));        
s12_hmcMIT(iii,ooo, 'iv2',fbc(1, 1:3));                                                                  
return
%% 
function                        local_f002(fbc);
%% command lines for step 2
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
iii{end+1}                      = 'hmcMIT';                                                              
ooo{3}                          = mv2_genfln(fullfile('pet',[g4iv2.xxx(1).ifc,'_info.mat']), fbc(1,1:3));
mv2_w4MPcoreg('review_ctac',iii,ooo,fbc(1,1:3));                                                         
return
%% 
function                        local_f003(fbc);
%% command lines for step 3
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
s0                              = 'review / approve PET-MRI coregistration, ifsegmented scans';          
s                               = load(iii{3});                                                          
if numel(s.sss)<3;                                                                                       
    h                           = findobj(gcf, 'String',s0);    ...                                      
    set(h, 'String',['Not ready for PET #',int2str(fbc(3))], 'BackgroundColor',iv2_bgcs(11));            
    pause(0.5);                                                                                          
    set(h, 'String',s0, 'BackgroundColor',iv2_bgcs(0));                             return;         end; 
i1.name                         = iii;                                                                   
i1.fbc                          = fbc;                                                                   
s12_hmcMIT(i1, ooo);                                                                                     
return
%% 
function                        local_f004(fbc);
%% command lines for step 4
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
g1                              = zeros(size(g4iv2.yyy.snm,1), 1);                                       
g2                              = zeros(size(g4iv2.yyy.snm,1), 1);                                       
g3                              = zeros(size(g4iv2.yyy.snm,1), 1);                                       
g4                              = zeros(size(g4iv2.yyy.snm,1), 1);                                       
disp('.listing progress statuses of segmented / interrupted scans');                                     
for i=1:1:size(g4iv2.yyy.cMat,1);                                                                        
    [f1, g1(:)]               	= makefarrays('pet','tra_rsz_qc_log.mat',   'fbc',[1,0,i]);               
    [f2, g2(:)]                 = makefarrays('pet','tra_rsz_info.mat',     'fbc',[1,0,i]);              
    [f4, g4(:)]                 = makefarrays('pet',[g4iv2.xxx(i).pio,'_hmcMIT_means_ok.txt'],  ...      
                                                            'fbc',[1,0,i]);                              
    for j=find(g2>0)';                                                                                   
        s                       = load(deblank(f2(j, :)));                                               
        if isfield(s.sss{1},'sme');                                                                      
                                g2(j, :)                    = max(s.sss{1}.sme(:,4));                    
        else;                   g2(j, :)                    = max(s.sss{1}.tim(:,3));               end; 
        g3(j, :)                = numel(s.sss);                                                     end; 
    k                           = find(g2+g3+g4>0);                                                      
   	disp(['> PET #',int2str(i),'/',int2str(size(g4iv2.yyy.cMat,1))]);                                    
    if ~isempty(k);                                                                                      
        disp(' Columns: A=noHMC checked; B: # of segments;')                                             
        disp('          C: HMC not done yet (=1), in progress (=2); D: Approved');                       
        dispCharArrays(1, char('Subjects',g4iv2.yyy.snm(k, :)),2, char('A',int2str(g1(k))),2,   ...      
            char('B',int2str(g2(k))),2, char('C',int2str(g3(k))), 2,char('D',int2str(g4(k))));           
    else;                                                                                                
        disp(' currently no segmented / interrupted scans identified');                     end;    end; 
return
%% 
function                        local_f005(fbc);
%% command lines for step 5
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
[ps, tim]                      	= gei(iii{1},   'spmparams','PETtimes');                                 
[info_mat, g2]               	= mv2_genfln(fullfile('pet', [g4iv2.xxx(1).pio,'_info.mat']), fbc(1,1:3)); 
if g2>0;                                                                                                 
    s                           = load(info_mat);                                                        
    ps1                         = ps;                                                                    
    tim                         = s.sss{3}.sme(:, 2:3);                                                  
    ps                          = nan(size(tim,1),    6);                                                
    ps(s.sss{3}.sme(:,4)==1, :) = ps1( s.sss{3}.sme( s.sss{3}.sme(:,4)==1, 5), :);                       
    for i=2:1:numel(s.sss{3}.ezm_hmc);                                                                   
        px                      = gei(s.sss{3}.ezm_hmc{i},  'spmparams');                                
        ps(s.sss{3}.sme(:,4)==i, :)     ...                                                              
                                = px(s.sss{3}.sme( s.sss{3}.sme(:,4)==i, 5), :);            end;    end; 
ppp                             = {{'L-R','A-P','C-N'}, {'X','Y','Z'}};                                  
yyy                             = {'Linear (mm)','Rotational (radian)'};                                 
snm                             = deblank(g4iv2.yyy.snm(fbc(2), :));                                     
snm(snm=='_')                   = ' ';                                                                   
add                             = [0, 3];                                                                
for i=1:1:2;                                                                                             
    figure;                                                                                              
    p1                          = plot(tim(:,1), ps(:, add(i)+[1:3]), '.-');                             
    set(gca,    'Fontsize',13);                                                                          
    set(findobj(gca, 'Marker','.'), 'MarkerSize',12);                                                    
    hold on;                                                                                             
    plot(get(gca, 'XLim'), [0,0], 'k:')                                                                  
    legend([p1(1),p1(2),p1(3)], ppp{i});                                                                 
    xlabel('Time (min)');                                                                                
    ylabel(yyy{i});                                                                                      
    title(['Subject: ',snm,'; PET #',int2str(fbc(3))]);                                             end; 
return
%% 
function                        local_f006(fbc);
%% command lines for step 6
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
isz                             = gei(iii{1},           'imagesize');                                    
if isz(3)>35;                   vL2Land(iii{1},         'fun','disp');                                   
else;                           viewImages(iii{1});                                                 end; 
return
%% 
function                        local_f007(fbc);
%% command lines for step 7
% 
global g4iv2;
% 
[iii, ooo]                      = mv2_genfln(fbc,   1);
% command lines start here: 
% 
dispimvsrbr(iii);                                                                                        
return
%% 
